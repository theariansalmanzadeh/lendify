{"version":3,"file":"static/js/191.65f93a32.chunk.js","mappings":"+NAiEA,UAnDA,WACE,IAAMA,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,KAAKH,QAAQ,IACrDI,GAAiBH,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,KAAKC,cAAc,IACjEC,GAASJ,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,KAAKE,MAAM,IAsCvD,OApCAC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACAG,QAAQC,IAAI,MACZ,IAAMC,EAAW,IAAIC,EAAAA,GACnBC,EAAAA,GACAC,EAAAA,GACAZ,IAEFa,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAN,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC6C,OAAtCP,EAAcR,EAASgB,QAAQpB,GAAOiB,EAAAE,KAAA,EAE1BP,EAAYS,sBAAsBtB,GAAgB,KAAD,EAA1D,GAAHc,EAAGI,EAAAK,KAEW,IAAhBC,OAAOV,GAAU,CAAAI,EAAAE,KAAA,SACgC,OAA7CL,GAAgBU,EAAAA,EAAAA,IAAeX,EAAKlB,GAASsB,EAAAE,KAAA,EACrBL,EAC3BM,QAAQpB,GACRyB,kBAAkB,KAAD,EAFdV,EAAeE,EAAAK,KAGrBpB,QAAQC,IAAIY,GAEZtB,GAASiC,EAAAA,EAAAA,IAAsBX,EAAgB,KAC/CtB,GACEkC,EAAAA,EAAAA,IAAU,CACRC,aAAc,GACdC,YAAad,EAAgB,GAC7Be,QAASf,EAAgB,GACzBgB,OAAQ,MAEV,QAGJtC,GAASuC,EAAAA,EAAAA,IAAqBnB,IAC9BpB,GAASwC,EAAAA,EAAAA,IAAmBrB,IAAc,yBAAAK,EAAAiB,OAAA,GAAAvB,EAAA,IAxB5CH,EAP2B,CAiC7B,GAAG,CAACf,EAAUO,EAAQL,KAGpBwC,EAAAA,EAAAA,MAACC,EAAAA,SAAc,CAAAC,SAAA,EACbC,EAAAA,EAAAA,KAACC,EAAAA,EAAY,KACbD,EAAAA,EAAAA,KAACE,EAAAA,GAAM,MAGb,C","sources":["pages/BorrowPage.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setNftLenderContract,\r\n  setFactoryContract,\r\n  setEtherLenderAddress,\r\n  selectNft,\r\n} from \"../store/contractNftSlice\";\r\nimport { Outlet } from \"react-router\";\r\nimport ChainSupport from \"../components/chainSupport\";\r\nimport { ethers } from \"ethers\";\r\nimport { createContract } from \"../utils/helper\";\r\nimport { contractAddress, factoryContractAbi } from \"../utils/contractInfo\";\r\n\r\nfunction BorrowPage() {\r\n  const dispatch = useDispatch();\r\n\r\n  const provider = useSelector((state) => state.web3.provider);\r\n  const accountAddress = useSelector((state) => state.web3.accountAddress);\r\n  const signer = useSelector((state) => state.web3.signer);\r\n\r\n  useEffect(() => {\r\n    if (!accountAddress) return;\r\n    console.log(\"ok\");\r\n    const contract = new ethers.Contract(\r\n      contractAddress,\r\n      factoryContractAbi,\r\n      provider\r\n    );\r\n    (async () => {\r\n      const nweContract = contract.connect(signer);\r\n\r\n      const res = await nweContract.contractInfoNftLender(accountAddress);\r\n\r\n      if (Number(res) !== 0) {\r\n        const childContract = createContract(res, provider);\r\n        const contractDetials = await childContract\r\n          .connect(signer)\r\n          .contractDetails();\r\n        console.log(contractDetials);\r\n\r\n        dispatch(setEtherLenderAddress(contractDetials[1]));\r\n        dispatch(\r\n          selectNft({\r\n            ownerAddress: \"\",\r\n            nftContract: contractDetials[0],\r\n            tokenId: contractDetials[2],\r\n            imgUrl: \"\",\r\n          })\r\n        );\r\n      }\r\n\r\n      dispatch(setNftLenderContract(res));\r\n      dispatch(setFactoryContract(nweContract));\r\n    })();\r\n  }, [dispatch, signer, provider]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ChainSupport />\r\n      <Outlet />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default BorrowPage;\r\n"],"names":["dispatch","useDispatch","provider","useSelector","state","web3","accountAddress","signer","useEffect","console","log","contract","ethers","contractAddress","factoryContractAbi","_asyncToGenerator","_regeneratorRuntime","mark","_callee","nweContract","res","childContract","contractDetials","wrap","_context","prev","next","connect","contractInfoNftLender","sent","Number","createContract","contractDetails","setEtherLenderAddress","selectNft","ownerAddress","nftContract","tokenId","imgUrl","setNftLenderContract","setFactoryContract","stop","_jsxs","React","children","_jsx","ChainSupport","Outlet"],"sourceRoot":""}